{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-note-js","path":"/notes/kali-linux-wsl2-win-kex/","result":{"data":{"mdx":{"id":"c818238c-b181-5f23-a3ab-54a2c94820ba","excerpt":"Kali Linux is giving its Windows Subsystem for Linux(WSL 2) users an automated Xfce graphical desktop environment Win-KeX . This removesâ€¦","frontmatter":{"title":"Kali Desktop Experience for Windows","date":"2020-08-19T00:00:00.000Z","tags":["note","linux","kali","wsl"],"cover":null},"fields":{"slug":"/notes/kali-linux-wsl2-win-kex/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Kali Desktop Experience for Windows\",\n  \"date\": \"2020-08-19T00:00:00.000Z\",\n  \"tags\": [\"note\", \"linux\", \"kali\", \"wsl\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Kali Linux is giving its Windows Subsystem for Linux(WSL 2) users an automated Xfce graphical desktop environment Win-KeX . This removes need for remote desktop clients or xClients or out of box scripts. Just typing in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kex\"), \" or clicking on the button, Win-KeX will give us a persistent-session GUI.\"), mdx(\"p\", null, \"Install Win-KeX via: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo apt update && sudo apt install kali-win-kex\")), mdx(\"p\", null, \"Run Win-KeX via: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kex\")), mdx(\"p\", null, \"Stop Win-Kex via on WSL2 Terminal: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kex stop\")), mdx(\"p\", null, \"Stop Kali Desktop by pressing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"F8\"), \" fn key and selecting \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Exit Viewer\"), \" option on the TigerVNC menu.\"), mdx(\"p\", null, \"you can find more information about Win-Kex on \", mdx(\"a\", {\n    href: \"https://www.kali.org/docs/wsl/win-kex/\",\n    target: \"_blank\"\n  }, \"kali-docs\"), \" and \", mdx(\"a\", {\n    href: \"https://www.bleepingcomputer.com/news/security/kali-linux-gets-a-gui-desktop-in-windows-subsystem-for-linux/\",\n    target: \"_blank\"\n  }, \"bleeping computer blog\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Win-Kex is only for WSL 2, please update your windows 10 version to support WSL2 and then the WSL version.\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"One issue by running without any custom settings is that Tiger Vnc occupies fullscreen by default on all monitors, which could be removed in current session by disabling full screen mode on all monitors in options menu which is display on pressing \", mdx(\"inlineCode\", {\n    parentName: \"em\"\n  }, \"F8\"), \" Fn key. But this setting could not be stored for later GUI spawns\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"c818238c-b181-5f23-a3ab-54a2c94820ba"}},"staticQueryHashes":["1961101537","2542493696"]}